(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{479:function(t,e,a){"use strict";a.r(e);var l=a(27),v=Object(l.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"maven的生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maven的生命周期"}},[t._v("#")]),t._v(" Maven的生命周期")]),t._v(" "),a("p",[t._v("maven共有三个标准生命周期：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("clean：项目清理的处理")])]),t._v(" "),a("li",[a("p",[t._v("default：项目部署的处理")])]),t._v(" "),a("li",[a("p",[t._v("site：站点文件生成的处理")])])]),t._v(" "),a("h2",{attrs:{id:"maven的构建生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maven的构建生命周期"}},[t._v("#")]),t._v(" Maven的构建生命周期")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("阶段")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("处理")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("验证 validate")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("验证项目")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("验证项目是否正确且所有必须信息是可用的")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("编译 compile")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("执行编译")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("源代码编译在此阶段完成")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("测试 Test")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("测试")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("使用适当的单元测试框架（例如JUnit）运行测试。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("包装 package")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("打包")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("创建JAR/WAR包如在 pom.xml 中定义提及的包")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("检查 verify")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("检查")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("对集成测试的结果进行检查，以保证质量达标")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("安装 install")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("安装")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("安装打包的项目到本地仓库，以供其他项目使用")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("部署 deploy")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("部署")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("拷贝最终的工程包到远程仓库中，以共享给其他开发人员和工程")])])])]),t._v(" "),a("p",[t._v("平常用到最多的是mvn clean package或者mvn install，两者都会在target生成最终的jar或war文件，区别在于install命令还会将生成的jar或war包安装至本地仓库。而当需要跨项目引用jar包时，我们需要把自己的jar包上传至maven私服（远程仓库）中，之前还傻傻的直接动手去maven私服手动上传jar包，不过相比于mvn deploy肯定是麻烦很多的，maven的deploy可以很方便的将我们工程中的jar发布至maven私服中方便团队间的jar包共享。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("当deploy快照版本时，maven会给快照打上时间戳以区分快照的版本，因为快照可能会频繁变更。maven会以包名是否包含SNAPSHOT来判断是否快照。")])]),t._v(" "),a("h2",{attrs:{id:"clean-生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clean-生命周期"}},[t._v("#")]),t._v(" Clean 生命周期")]),t._v(" "),a("p",[t._v("当我们执行 mvn post-clean 命令时，Maven 调用 clean 生命周期，它包含以下阶段：")]),t._v(" "),a("ul",[a("li",[t._v("pre-clean：执行一些需要在clean之前完成的工作")]),t._v(" "),a("li",[t._v("clean：移除所有上一次构建生成的文件")]),t._v(" "),a("li",[t._v("post-clean：执行一些需要在clean之后立刻完成的工作")])]),t._v(" "),a("p",[t._v("mvn clean 中的 clean 就是上面的 clean，在一个生命周期中，运行某个阶段的时候，它之前的所有阶段都会被运行，也就是说，如果执行 mvn clean 将运行以下两个生命周期阶段：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("pre-clean, clean\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("如果我们运行 mvn post-clean ，则运行以下三个生命周期阶段：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("pre-clean, clean, post-clean\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h2",{attrs:{id:"site-生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#site-生命周期"}},[t._v("#")]),t._v(" Site 生命周期")]),t._v(" "),a("p",[t._v("Maven Site 插件一般用来创建新的报告文档、部署站点等。")]),t._v(" "),a("ul",[a("li",[t._v("pre-site：执行一些需要在生成站点文档之前完成的工作")]),t._v(" "),a("li",[t._v("site：生成项目的站点文档")]),t._v(" "),a("li",[t._v("post-site： 执行一些需要在生成站点文档之后完成的工作，并且为部署做准备")]),t._v(" "),a("li",[t._v("site-deploy：将生成的站点文档部署到特定的服务器上")])])])}),[],!1,null,null,null);e.default=v.exports}}]);